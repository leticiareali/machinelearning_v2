-- SCRIPT PARA CRIAÇÃO DO BANCO DE DADOS 
-- DO ESTUDO DE CASO SIP
-- COMANDOS PARA EXCLUIR AS TABELAS
DROP TABLE t_sip_departamento CASCADE CONSTRAINTS;
DROP TABLE t_sip_dependente CASCADE CONSTRAINTS;
DROP TABLE t_sip_funcionario CASCADE CONSTRAINTS;
DROP TABLE t_sip_implantacao CASCADE CONSTRAINTS;
DROP TABLE t_sip_projeto CASCADE CONSTRAINTS;
-- COMANDOS PARA CRIAR AS TABELAS 
-- E ADICIONAR CONSTRAINTS: PRIMARY KEY, CHECK E UNIQUE
CREATE TABLE t_sip_departamento (
    cd_depto NUMBER(3)      NOT NULL,
    nm_depto VARCHAR2(30)   NOT NULL,
    sg_depto CHAR(3)        NOT NULL
);
COMMENT ON COLUMN t_sip_departamento.cd_depto IS
    'Um departamento é identificado por um código numérico de três dígitos.';
   ALTER TABLE t_sip_departamento 
ADD CONSTRAINT pk_sip_departamento 
   PRIMARY KEY ( cd_depto );
   ALTER TABLE t_sip_departamento 
ADD CONSTRAINT un_sip_depto_nome 
        UNIQUE ( nm_depto );
   ALTER TABLE t_sip_departamento 
ADD CONSTRAINT un_sip_depto_sigla 
        UNIQUE ( sg_depto );
CREATE TABLE t_sip_dependente (
    nr_matricula  NUMBER(5)     NOT NULL,
    cd_dependente NUMBER(2)     NOT NULL,
    nm_dependente VARCHAR2(50)  NOT NULL,
    dt_nascimento DATE          NOT NULL
);
   ALTER TABLE t_sip_dependente 
ADD CONSTRAINT pk_sip_dependente 
   PRIMARY KEY ( nr_matricula, cd_dependente );
CREATE TABLE t_sip_funcionario (
    nr_matricula      NUMBER(5)     NOT NULL,
    cd_depto          NUMBER(3)     NOT NULL,
    nm_funcionario    VARCHAR2(50)  NOT NULL,
    dt_nascimento     DATE          NOT NULL,
    dt_admissao       DATE          NOT NULL,
    ds_endereco       VARCHAR2(100) NOT NULL,
    vl_salario_mensal NUMBER(7, 2) NOT NULL
);
   ALTER TABLE t_sip_funcionario 
ADD CONSTRAINT ck_sip_func_salario 
         CHECK ( vl_salario_mensal >= 1212 );
   ALTER TABLE t_sip_funcionario 
ADD CONSTRAINT pk_sip_funcionario 
   PRIMARY KEY ( nr_matricula );
CREATE TABLE t_sip_implantacao (
    cd_projeto     NUMBER(5) NOT NULL,
    cd_implantacao NUMBER(3) NOT NULL,
    nr_matricula   NUMBER(5) NOT NULL,
    dt_entrada     DATE      NOT NULL,
    dt_saida       DATE          NULL
);
   ALTER TABLE t_sip_implantacao 
ADD CONSTRAINT ck_sip_implant_data 
         CHECK ( dt_saida > dt_entrada );
   ALTER TABLE t_sip_implantacao 
ADD CONSTRAINT pk_sip_implantacao 
   PRIMARY KEY ( cd_projeto, cd_implantacao );
CREATE TABLE t_sip_projeto (
    cd_projeto NUMBER(5)    NOT NULL,
    nm_projeto VARCHAR2(40) NOT NULL,
    dt_inicio  DATE         NOT NULL,
    dt_termino DATE
);
-- ADICIONAR CONSTRAINT FOREIGN KEY
   ALTER TABLE t_sip_projeto 
ADD CONSTRAINT ck_sip_projeto_data 
         CHECK ( dt_termino > dt_inicio );
   ALTER TABLE t_sip_projeto 
ADD CONSTRAINT pk_sip_projeto 
   PRIMARY KEY ( cd_projeto );
   ALTER TABLE t_sip_projeto 
ADD CONSTRAINT un_sip_projeto_nome 
        UNIQUE ( nm_projeto );
   ALTER TABLE t_sip_dependente
ADD CONSTRAINT fk_sip_dependente_func 
   FOREIGN KEY ( nr_matricula )
    REFERENCES t_sip_funcionario ( nr_matricula );
   ALTER TABLE t_sip_funcionario
ADD CONSTRAINT fk_sip_func_depto 
   FOREIGN KEY ( cd_depto )
    REFERENCES t_sip_departamento ( cd_depto );
   ALTER TABLE t_sip_implantacao
ADD CONSTRAINT fk_sip_implant_func 
   FOREIGN KEY ( nr_matricula )
    REFERENCES t_sip_funcionario ( nr_matricula );
   ALTER TABLE t_sip_implantacao
ADD CONSTRAINT fk_sip_implant_projeto 
   FOREIGN KEY ( cd_projeto )
    REFERENCES t_sip_projeto ( cd_projeto );

INSERT INTO T_SIP_DEPARTAMENTO VALUES (1,'FINANCEIRO', 'FIN');
INSERT INTO T_SIP_DEPARTAMENTO (CD_DEPTO, NM_DEPTO, SG_DEPTO)
	VALUES (2, 'MARKETING', 'MKT')
SELECT * FROM T_SIP_DEPARTAMENTO;

INSERT INTO T_SIP_PROJETO
	VALUES (1, 'PROJETO ABC',
		TO_DATE('01/02/2020', 'DD/MM/YYYY'),
		TO_DATE('15/11/2022', 'DD/MM/YYYY'));
SELECT * FROM T_SIP_PROJETO;

INSERT INTO T_SIP_FUNCIONARIO
	VALUES (12345, 1, 'JOÃO DA SILVA',
			TO_DATE('18/03/2010', 'DD/MM/YYYY'),
			TO_DATE('28/03/2012', 'DD/MM/YYYY'),
			'AVENIDA PAULISTA, 1000 - 10o. ANDAR',
			1234.56); --UTILIZAMOS PONTO DECIMAL
SELECT * FROM T_SIP_FUNCIONARIO;

-- METODO IMPLICITO - OMITA A COLUNA DA LISTA DURANTE A INSERÇÃO
-- A LINHA OMITIDA É PREENCHIDA COM NULO
INSERT INTO T_SIP_PROJETO (CD_PROJETO, NM_PROJETO, DT_INICIO)
	VALUES (2, 'PROJETO DEF',
    		TO_DATE('19/03/2020', 'DD/MM/YYYY'));

SELECT * FROM T_SIP_PROJETO;

-- METODO EXPLICITO (APENAS QUANDO FOR MANDATÓRIO)
INSERT INTO T_SIP_PROJETO 
	VALUES (3, 'PROJETO GHI',
    		TO_DATE('19/03/2020', 'DD/MM/YYYY'),
    		NULL);
SELECT * FROM T_SIP_PROJETO;

-- SUBCONSULTA/SUBQUERY
-- CRIAR UMA TABELA EXEMPLO
-- A TABELA ARMAZENARÁ APENAS PROJETOS FINALIZADOS
CREATE TABLE T_SIP_COPY_PROJETO_FIN
(
    CD_PROJETO          NUMBER(5)       NOT NULL ,
    NM_PROJETO          VARCHAR2(40)    NOT NULL ,
    DT_INICIO           DATE            NOT NULL ,
    DT_TERMINO          DATE            NOT NULL 
);
-- CHAVE PRIMARIA DA TABELA 
   ALTER TABLE T_SIP_COPY_PROJETO_FIN
ADD CONSTRAINT PK_SIP_COPY_PROJETO_FIN
   PRIMARY KEY (CD_PROJETO);

-- REALIZANDO A COPIA DOS DADOS DE UMA TABELA PRA OUTRA
INSERT INTO T_SIP_COPY_PROJETO_FIN (CD_PROJETO, NM_PROJETO, DT_INICIO, DT_TERMINO)
	(SELECT CD_PROJETO, NM_PROJETO, DT_INICIO, DT_TERMINO
    	FROM T_SIP_PROJETO
    	WHERE DT_TERMINO IS NOT NULL);

-- REALIZANDO A CÓPIA DOS DADOS DE UMA TABELA PARA OUTRA
-- UTILIZANDO O COMANDO INSERT E O COMANDO SELECT 
-- SUBCONSULTA OU SUBQUERY)
INSERT INTO T_SIP_COPY_PROJETO_FIN 
            (SELECT * FROM T_SIP_PROJETO
        WHERE DT_TERMINO IS NOT NULL);

-- UPDATE
-- ATUALIZAR DUAS OU MAIS COLUNAS EM UM COMANDO DE ATUALIZACAO
-- ALTERAR O NOME E A DATA DE NASCIMENTO DE UM 
-- FUNCIONARIO ESPECÍFICO
   UPDATE T_SIP_FUNCIONARIO
      SET NM_FUNCIONARIO = 'LETICIA REALI',
    DT_NASCIMENTO = TO_DATE ('18/05/1985','DD/MM/YYYY')
    WHERE NR_MATRICULA = 12345;

SELECT * FROM T_SIP_FUNCIONARIO WHERE NR_MATRICULA = 12345;

-- AUMENTO SALARIAL
UPDATE T_SIP_FUNCIONARIO
	SET VL_SALARIO_MENSAL = VL_SALARIO_MENSAL * 1.05;

SELECT * FROM T_SIP_FUNCIONARIO;

-- DELETE
DELETE FROM T_SIP_PROJETO
	WHERE DT_INICIO <= TO_DATE ('31/12/2020', 'DD/MM/YYYY')

SELECT * FROM T_SIP_PROJETO;

--ROLLBACK (RESTAURAR)
ROLLBACK;
COMMIT; --TODAS AS TRANSAÇÕES NÃO CONFIRMADAS A PARTIR DE AGORA ESTÃO SALVAS NO DISCO

SELECT * FROM T_SIP_FUNCIONARIO;

SELECT NR_MATRICULA, NM_FUNCIONARIO, VL_SALARIO_MENSAL
		FROM T_SIP_FUNCIONARIO;
	WHERE NM_MATRICULA = 12345;

-- DISTINCT (NÃO TRAZ VALORES REPETIDOS)
SELECT DISTINCT CD_DEPTO FROM T_SIP_FUNCIONARIO;
-- OU 
SELECT UNIQUE CD_DEPTO FROM T_SIP_FUNCIONARIO;

-- OPERADORES MATEMÁTICOS
VL_SALARIO * 1.05

-- ALIAS (APELIDO PARA COLUNA)
SELECT NR_MATRICULA,
		NM_FUNCIONARIO FUNCIONARIO,
		VL_SALARIO_MENSAL "SALÁRIO MENSAL", -- ENTRE ASPAS QDO FOR PALAVRA COMPOSTA OU COM CARACTERE ESPECIAL
		VL_SALARIO_MENSAL * 1.05 AS "SALÁRIO REAJUSTADO"
FROM T_SIP_FUNCIONARIO
		ORDER BY NR_MATRICULA; -- ASC (CRESCENTE) DEFAULT - DESC (DECRESCENTE)
--ORDER BY 2 ASC, 4 DESC; (POSIÇÃO DA COLUNA NO COMANDO)

-- FILTRANDO POR NUMEROS
SELECT NR_MATRICULA, NM_FUNCIONARIO, VL_SALARIO_MENSAL
		FROM T_SIP_FUNCIONARIO
	WHERE VL_SALARIO_MENSAL > 1500.50;

-- FILTRANDO POR CARACTERES
SELECT NR_MATRICULA, NM_FUNCIONARIO, VL_SALARIO_MENSAL
		FROM T_SIP_FUNCIONARIO 
	WHERE NM_FUNCIONAR = 'LETICIA REALI'; -- WHERE UPPER/ WHERE LOWER (CONVERTE PARA LETRAS MAIS/MINUS)

-- FILTRANDO POR DATA
SELECT NR_MATRICULA, NM_FUNCIONARIO, VL_SALARIO_MENSAL
		FROM T_SIP_FUNCIONARIO
	WHERE DT_ADMISSAO >= TO_DATE('10/01/2020', 'DD/MM/YYYY');
--AND
	AND CD_DEPTO = 3;
-- OR
	WHERE CD_DEPTO = 4 OR VL_SALARIO_MENSAL > 1500;
-- NOT
	WHERE NOT CD_DEPTO = 4;

--OPERADORES SQL
--BETWEEN (INTERVALOS FECHADOS)
WHERE SALARIO_MENSAL BETWEEN 1000 AND 2500;

--IN
WHERE CD_DEPTO IN (1, 2, 3)
WHERE TO_CHAR(DT_ADMISSAO, 'YYYY' IN ('2012', '2014'))
-- NOT IN
WHERE CD_DEPTO NOT IN (1, 2, 3)

-- IS NULL (VALIDA SE CONTEÚDO É NULO)
WHERE DT_TERMINO IS NULL;
WHERE DT_TERMINO IS NOT NULL;

-- LIKE (DETERMINADO PADRÃO)
WHERE NM_DEPTO LIKE 'FINA%'; --PROCURA TODOS QUE TEM FINA NOS 4 PRIMEIROS CARACTERES % O RESTO PODE SER QUALQUER COISA
WHERE NM_DEPTO LIKE '_A%' -- QUALQUER COISA ESCRITA ANTES E DEPOIS DA LETRA A, A É A SEGUNDA POSIÇÃO
WHERE NM_DEPTO LIKE '___UR%'
WHERE NM_DEPTO LIKE '%ME%' -- ME EM QUALQUER PARTE DO NOME COM ALGO NO INICIO E NO FIM

-- CONCATENAÇÃO ||
SELECT NR_MATRICULA,
	'O FUNCIONARIO ' || NM_FUNCIONARIO ||
	', FOI ADMITIDO EM: ' || DT_ADMISSAO "TEXTO"
FROM T_SIP_FUNCIONARIO;